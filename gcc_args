gcc常见参数
首先需要明白gcc driver的工作流程
    预处理(cpp) -> 编译(gcc) -> 汇编(as) -> 链接(ld)
其次需要明白头文件(include)和库文件(lib)表示的意义
    在include中的文件是所谓的.h文件，其中是提供给用户的接口，是文本文件
    在lib中的文件是.a(静态库文件)或者.so(动态库文件)，是二进制文件
    .h文件在预处理阶段需要使用,lib中的文件在链接的时候需要使用
    -I指定头文件的路径(-I../include)
    -L指定库文件的路径(-L../lib)
    -l指定库文件(-lmylib表示需要链接libmylib.so/a库文件)
    //库文件需要明确指定，而头文件不需要指定(预处理器遇到#include "***"就会自动在给定路径中查找)
-E：预处理后停止，默认输出到标准输出设备，通过-o指定输出文件（文本文件）
-S：编译之后停止，默认生成对应的.s文件(文本文件)
-c：汇编之后停止，默认生成对应的.o文件(二进制文件)
-g：生成调试工具需要的符号信息
-On：指定优化级别为n(默认为O0,最高为O3)
-Idirname：指定预处理阶段寻找头文件的目录
    <>的头文件在系统默认路径中查找
    ""的头文件默认只在当前目录下查找，如果自己定义的头文件不在当前路径下，需要指定自定义的头文件的路径
    是预处理阶段使用的参数
-Ldirname：将dirname路径加入到程序函数库的目录列表中，是在链接过程
    中使用的参数，在默认情况下，链接程序ld只在系统默认路径中查找所
    需要的库文件，这个选项告诉ld首先在-L指定的路径中进行查找库文件，
    然后再到系统默认路径中查找库文件
-lname：链接时装载名为libname.a或libname.so的函数库，该函数库位于
    系统默认目录或者由-L指定的路径中
-Wall：让gcc生成尽可能多的警告信息
-Werror：把所有的警告都当作error
-Dmacro：在编译时进行宏定义（-DDEBUG），相当于#define macro
-Dmacro=defn：相当于#define macro=defn
-Umacro：相当于#undef macro（取消宏的定义）

补充说明：
-l参数就是指定程序要链接的库名(比如要连接库文件名为libm.a的库，
        参数就是-lm)
    放在/lib和/usr/lib以及/usr/local/lib中的库直接用-l参数就能链接了
    但是如果库文件不在上述三个目录里，而是在其他目录中，只用-l参数的
    话还是会出错，出错信息就是在上述三个目录中找不到对应的库文件
    这时候就需要使用-L参数
-L参数后面紧跟的是库文件的路径，比如我们要连接/aaa/bbb/ccc目录下
    的libtest.so文件，编译参数就为-L/aaa/bbb/ccc -ltest

-include的参数和-l参数属于同一级别，不过-include参数是为了指定头
    文件的路径，不过一般在程序中通过#include ***的形式包含了需要
    的头文件，所以此参数一般不使用
-I参数用来指定查找头文件的路径，系统默认的目录是/usr/include，如果
    头文件不在系统默认目录下，就需要通过-I指定路径，比如头文件放在
    /myinclude路径下，那么编译参数为-I/myinclude，否则就会得到一个
    "***.h: No such file or directory"
